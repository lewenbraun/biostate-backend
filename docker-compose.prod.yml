services:
  # Backend Application (Laravel)
  bs-backend:
    build:
      context: .
      dockerfile: .docker/php/prod/prod.Dockerfile
    container_name: bs-backend
    restart: unless-stopped
    tty: true
    environment:
      - no_proxy=.bs-backend
    working_dir: /var/www
    volumes:
      - .:/var/www
      - .docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - bs-network
    depends_on:
      - bs-db

  # Backend Nginx (serving Laravel)
  bs-nginx-backend:
    image: nginx:latest
    container_name: bs-nginx-backend
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./.docker/nginx:/etc/nginx/conf.d
    networks:
      - bs-network
    depends_on:
      - bs-backend

  # Database
  bs-db:
    image: postgres:latest
    container_name: bs-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - bs-db-data:/var/lib/postgresql/data
    networks:
      - bs-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Frontend (Quasar) served by Nginx
  bs-frontend:
    build:
      context: ../biostate-frontend
      dockerfile: .docker/dockerfiles/prod.Dockerfile
    container_name: bs-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - bs-network

networks:
  bs-network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.30.0.0/24"
          gateway: 172.30.0.1

volumes:
  bs-db-data:
    driver: local
